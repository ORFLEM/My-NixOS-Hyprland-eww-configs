;; ============================================================================
;; Variables & Polling
;; ============================================================================

;; window info
(deflisten hAW 
  :initial "" 
  "./scripts/active_window-hypr.sh")

;; Keyboard layout info
(deflisten hkblayout 
  :initital ""
  "./scripts/kb_layout-hypr.sh")

;; Workspaces info
(deflisten hworkspaces :initial "" "./scripts/workspace-hypr.sh stream-ws-json")

;; ============================================================================
;; Main Bar Widget
;; ============================================================================

(defwidget hbar []
  (centerbox :orientation "h" :hexpand false :class "bar"
    (box :class "bar-section" :valign "center" :halign "start" :orientation "h" :space-evenly false :spacing 3
      (launcher)
      (bg)
      (hworkspaces)
      (hactive_window)
    )      
    ;; Center section
    (box :class "bar-section" :valign "center" :halign "center" :orientation "h" :space-evenly false :spacing 3
      (weather)
      (time)
    )
    ;; Right section
    (box :class "bar-section" :valign "center" :halign "end" :orientation "h" :space-evenly false :spacing 3
      (cava)
      (music)
      (settings)
      (volume)
      (hkeyboard_layout)
      ;;(notifications)
      (power)
    )
  )
)

;; ============================================================================
;; Left Section Widgets
;; ============================================================================

(defwidget hworkspaces []
  (eventbox :onscroll "if [ '{}' = 'up' ]; then hyprctl dispatch workspace -1; else hyprctl dispatch workspace +1; fi"
    (box :class "ws" :orientation "h" :space-evenly false
      (eventbox :onhover "eww update ws=true" :onhoverlost "eww update ws=false"
        (box :orientation "h" :space-evenly false :vexpand false
          (box :space-evenly false :spacing 2
            (hws-button :id 1 :state "${hworkspaces.ws1.class}" :info "${hworkspaces.ws1.icon}")
            (hws-button :id 2 :state "${hworkspaces.ws2.class}" :info "${hworkspaces.ws2.icon}")
            (hws-button :id 3 :state "${hworkspaces.ws3.class}" :info "${hworkspaces.ws3.icon}")
            (hws-button :id 4 :state "${hworkspaces.ws4.class}" :info "${hworkspaces.ws4.icon}")
            (hws-button :id 5 :state "${hworkspaces.ws5.class}" :info "${hworkspaces.ws5.icon}")
          )
          (revealer :transition "slideleft" :reveal ws 
            (box :orientation "h" :space-evenly false :vexpand false :spacing 2 :style "padding: 0px 0px 0px 2px;"
              (hws-button :id 6 :state "${hworkspaces.ws6.class}" :info "${hworkspaces.ws6.icon}")
              (hws-button :id 7 :state "${hworkspaces.ws7.class}" :info "${hworkspaces.ws7.icon}")
              (hws-button :id 8 :state "${hworkspaces.ws8.class}" :info "${hworkspaces.ws8.icon}")
              (hws-button :id 9 :state "${hworkspaces.ws9.class}" :info "${hworkspaces.ws9.icon}")
              (hws-button :id 10 :state "${hworkspaces.ws10.class}" :info "${hworkspaces.ws10.icon}")
            )
          )
        )
      )
    )
  )
)
    
(defwidget hws-button [id state info]
  (button :class "ws ${state}" :onclick "./scripts/workspace-hypr.sh change-ws ${id}"
    (label :text "${info}")
  )
)

(defwidget hactive_window []
  (box :class "aw" :orientation "h" :space-evenly true :halign "start" :tooltip "активное окно"
    (label :text "${hAW}")
  )
)

;; ============================================================================
;; Center Section Widgets
;; ============================================================================

;; ============================================================================
;; Right Section Widgets
;; ============================================================================

(defwidget hkeyboard_layout []
  (box :class "kbl":orientation "h" :space-evenly true :halign "start"
    (label :class "lbl-clr" :tooltip "Язык" :text "󰌏 ")
    (label :text "${hkblayout}")
  )
)

;; ============================================================================
;; Window Definition
;; ============================================================================

(defwindow hbar
  :monitor 0
  :exclusive true
  :stacking "fg"
  :windowtype "dock"
  :geometry (geometry :x "0px" :y "6px"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :reserve (struts 
    :side "bottom" 
    :distance "4%")
  (hbar)
)

