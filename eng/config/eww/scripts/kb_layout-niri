#!/bin/bash

# Получаем информацию о раскладке клавиатуры для niri
# Niri в версии 0.1.9+ поддерживает получение раскладки через IPC

# Попробуем получить раскладку через niri IPC (если поддерживается)
if command -v niri >/dev/null 2>&1; then
    # Пробуем новый API для получения раскладки клавиатуры
    current_layout=$(niri msg --json keyboard-layout 2>/dev/null | jq -r '.Ok.layout' 2>/dev/null)
    
    # Если это не сработало, пробуем альтернативные методы
    if [[ -z "$current_layout" || "$current_layout" == "null" ]]; then
        # Попробуем получить через event stream (может быть доступно в новых версиях)
        current_layout=$(timeout 1s niri msg --json event-stream 2>/dev/null | head -1 | jq -r '.Ok.KeyboardLayoutChanged.layout // empty' 2>/dev/null)
    fi
fi

# Метод 1: Попробуем получить через setxkbmap (если X11 доступен или XWayland)
if [[ -z "$current_layout" ]] && command -v setxkbmap >/dev/null 2>&1; then
    current_layout=$(setxkbmap -query 2>/dev/null | grep layout | awk '{print $2}' | cut -d',' -f1)
fi

# Метод 2: Если setxkbmap не сработал, попробуем через localectl
if [[ -z "$current_layout" ]] && command -v localectl >/dev/null 2>&1; then
    current_layout=$(localectl status 2>/dev/null | grep "X11 Layout" | awk '{print $3}' | cut -d',' -f1)
fi

# Метод 3: Проверяем переменные окружения
if [[ -z "$current_layout" ]]; then
    if [[ -n "$XKB_DEFAULT_LAYOUT" ]]; then
        current_layout="$XKB_DEFAULT_LAYOUT"
    elif [[ -n "$LANG" ]]; then
        case "$LANG" in
            ru_*|*_RU*) current_layout="ru";;
            en_*|*_US*) current_layout="us";;
            *) current_layout="us";;
        esac
    fi
fi

# Метод 4: Попробуем через gsettings (для GNOME-based систем)
if [[ -z "$current_layout" ]] && command -v gsettings >/dev/null 2>&1; then
    current_layout=$(gsettings get org.gnome.desktop.input-sources sources 2>/dev/null | grep -o "'[^']*'" | head -1 | tr -d "'")
fi

# Метод 5: Проверяем через файлы конфигурации
if [[ -z "$current_layout" ]] && [[ -f /etc/default/keyboard ]]; then
    current_layout=$(grep "XKBLAYOUT" /etc/default/keyboard 2>/dev/null | cut -d'=' -f2 | tr -d '"' | cut -d',' -f1)
fi

# Метод 6: Попробуем через hyprctl (если доступен, для совместимости)
if [[ -z "$current_layout" ]] && command -v hyprctl >/dev/null 2>&1; then
    current_layout=$(hyprctl devices -j 2>/dev/null | jq -r '.keyboards[0].active_keymap' 2>/dev/null | cut -d'(' -f1 | tr -d ' ')
fi

# Метод 7: Попробуем через swaymsg (если доступен, для совместимости)
if [[ -z "$current_layout" ]] && command -v swaymsg >/dev/null 2>&1; then
    current_layout=$(swaymsg -t get_inputs 2>/dev/null | jq -r '.[] | select(.type=="keyboard") | .xkb_active_layout_name' 2>/dev/null | head -1 | cut -d'(' -f1 | tr -d ' ')
fi

# Если ничего не найдено, используем значение по умолчанию
if [[ -z "$current_layout" ]]; then
    current_layout="us"
fi

# Обрабатываем различные возможные названия раскладок
case "$current_layout" in
    "English"|"en_US"|"us"|"en"|"English (US)")
        layout_name="EN";;
    "Russian"|"ru_RU"|"ru"|"Russian"|"Russian (Russia)")
        layout_name="RU";;
    "xkb:us::eng")
        layout_name="EN";;
    "xkb:ru::rus")
        layout_name="RU";;
    *)
        # Пытаемся извлечь первые 2 символа и привести к верхнему регистру
        layout_name=$(echo "$current_layout" | head -c 2 | tr '[:lower:]' '[:upper:]')
        # Если получилось что-то странное, используем EN
        if [[ ! "$layout_name" =~ ^[A-Z]{1,3}$ ]]; then
            layout_name="EN"
        fi
        ;;
esac

# Выводим текущую раскладку
echo "$layout_name"
